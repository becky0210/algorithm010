class Solution {
   int res;
    public int reversePairs(int[] nums) {
        res=0;
        merge(nums,0,nums.length-1);
        return res;
        
    }

    private void merge(int[] nums, int left, int right) {
        if(left>=right) return;
        int mid = left+(right-left) / 2;
        merge(nums,left,mid);
        merge(nums,mid+1,right);
        int count=0;
        for(int l=left,r=mid+1;l<=mid;){
           if(r>right || nums[l] <= 2*(long)nums[r]) {
                    l++;
                    res+=count;
                }else{
                    r++;
                    count++;
                }
        }
        // Arrays.sort(nums,left,right+1);
        int le=left,ri=mid+1;
        int k=0;
        int[] tmp=new int[right-left+1];
        while(le<=mid && ri<=right){
            tmp[k++]=nums[le]<=nums[ri]?nums[le++]:nums[ri++];
        }
        while(le<=mid)tmp[k++]=nums[le++];
        while(ri<=right) tmp[k++]=nums[ri++];
        for(int i=0;i<tmp.length;i++)
            nums[left+i]=tmp[i];
        }
        
}