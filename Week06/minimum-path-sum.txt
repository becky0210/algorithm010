 public int minPathSum(int[][] grid) {
        int n = grid.length;
        int m=grid[0].length;
        int[][] dp=new int[n][m];
        int tmp=0;
        for(int i=0;i<n;i++){
            tmp+=grid[i][0];
            dp[i][0]=tmp;
        }
        tmp=0;
        for(int i=0;i<m;i++){
            tmp+=grid[0][i];
            dp[0][i]=tmp;
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j])+grid[i][j];
            }
        }
        return dp[n-1][m-1];
    }

状态数组: dp[n][m]

dp方程: dp[i][j]=Math.min(dp[i][j-1],dp[i-1][j])+grid[i][j];

时间复杂度：O(n)
空间复杂度：O(mn)