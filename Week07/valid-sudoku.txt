class Solution {
     public boolean isValidSudoku(char[][] board) {
        int n=board.length,m=board[0].length;
        HashMap<Integer,Integer>[] boxes=new HashMap[n];
        HashMap<Integer,Integer>[] row=new HashMap[n];
        HashMap<Integer,Integer>[] col=new HashMap[n];
        for(int i=0;i<n;i++){
            boxes[i]=new HashMap<Integer,Integer>();
            row[i]=new HashMap<Integer,Integer>();
            col[i]=new HashMap<Integer,Integer>();
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){

                if(board[i][j]!='.') {
                    int c = (int) board[i][j];
                    int index=((i / 3) * 3+ (j / 3));
                    row[i].put(c,  row[i].getOrDefault(c, 0) + 1);
                    col[j].put(c,  col[j].getOrDefault(c, 0) + 1);
                    boxes[index].put(c,  boxes[index].getOrDefault(c, 0) + 1);


                    if ( row[i].get(c) > 1 ||  col[j].get(c) > 1 || boxes[index].get(c) > 1)
                        return false;
                }
            }
        }
        return true;

    }


}