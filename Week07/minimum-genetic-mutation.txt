class Solution {
    int minStepGlobal=Integer.MAX_VALUE;
    public int minMutation(String start, String end, String[] bank) {
        HashSet<String> visited=new HashSet<>();
        dfs(visited,0, start, end, bank);
        return (minStepGlobal==Integer.MAX_VALUE)?-1:minStepGlobal;


    }

    private void dfs(HashSet<String>visited, int minstep,String start, String end, String[] bank) {
        if(start==end)
            minStepGlobal=Math.min(minstep,minStepGlobal);

        for(String str:bank){
            int diff=0;

            for(int k=0;k<str.length();k++){
                if(str.charAt(k)!=start.charAt(k))
                    if(diff++>1) break;
            }
            if((diff==1) && !visited.contains(str)) {

                visited.add(str);
                dfs(visited,minstep+1,str,end,bank);
                visited.remove(str);

            }

        }
}
}