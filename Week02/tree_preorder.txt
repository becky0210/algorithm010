/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
//      public void helper(TreeNode root,List<Integer> res){
//          if(root==null) return;
//           res.add(root.val);
//           helper(root.left,res);
//           helper(root.right,res);

//     }
    public List<Integer> preorderTraversal(TreeNode root) {
        
        
        // List<Integer> res=new ArrayList<>();
        // Stack<TreeNode> stack =new Stack<>();
        // while(root!=null){
        //     res.add(root.val);
        //     if(root.right!=null) 
        //         stack.push(root.right);
        //     root=root.left;
        //     if(root==null && !stack.isEmpty()) 
        //         root=stack.pop();
        // }
        // return res;

        
        // List<Integer> res=new ArrayList<>();
        // if(root!=null)
        //     helper(root,res);
        // return res;
       
        List<Integer> res=new ArrayList<>();
        if(root==null) return res;
        res.add(root.val);
        res.addAll(preorderTraversal(root.left));
        res.addAll(preorderTraversal(root.right));
        
        return res;
        
    }
   

}